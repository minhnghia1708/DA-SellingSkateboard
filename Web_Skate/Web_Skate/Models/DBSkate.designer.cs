#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Web_Skate.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="WebSkate")]
	public partial class DBSkateDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBinhLuan(BinhLuan instance);
    partial void UpdateBinhLuan(BinhLuan instance);
    partial void DeleteBinhLuan(BinhLuan instance);
    partial void InsertChucVu_NV(ChucVu_NV instance);
    partial void UpdateChucVu_NV(ChucVu_NV instance);
    partial void DeleteChucVu_NV(ChucVu_NV instance);
    partial void InsertCT_DonHang(CT_DonHang instance);
    partial void UpdateCT_DonHang(CT_DonHang instance);
    partial void DeleteCT_DonHang(CT_DonHang instance);
    partial void InsertDonHang(DonHang instance);
    partial void UpdateDonHang(DonHang instance);
    partial void DeleteDonHang(DonHang instance);
    partial void InsertKhachHang(KhachHang instance);
    partial void UpdateKhachHang(KhachHang instance);
    partial void DeleteKhachHang(KhachHang instance);
    partial void InsertKhuyenMai(KhuyenMai instance);
    partial void UpdateKhuyenMai(KhuyenMai instance);
    partial void DeleteKhuyenMai(KhuyenMai instance);
    partial void InsertLoaiSanPham(LoaiSanPham instance);
    partial void UpdateLoaiSanPham(LoaiSanPham instance);
    partial void DeleteLoaiSanPham(LoaiSanPham instance);
    partial void InsertNhanVien(NhanVien instance);
    partial void UpdateNhanVien(NhanVien instance);
    partial void DeleteNhanVien(NhanVien instance);
    partial void InsertPhuongThucThanhToan(PhuongThucThanhToan instance);
    partial void UpdatePhuongThucThanhToan(PhuongThucThanhToan instance);
    partial void DeletePhuongThucThanhToan(PhuongThucThanhToan instance);
    partial void InsertQuyen_NV(Quyen_NV instance);
    partial void UpdateQuyen_NV(Quyen_NV instance);
    partial void DeleteQuyen_NV(Quyen_NV instance);
    partial void InsertSanPham(SanPham instance);
    partial void UpdateSanPham(SanPham instance);
    partial void DeleteSanPham(SanPham instance);
    partial void InsertThuongHieu(ThuongHieu instance);
    partial void UpdateThuongHieu(ThuongHieu instance);
    partial void DeleteThuongHieu(ThuongHieu instance);
    partial void InsertTrangThaiDonHang(TrangThaiDonHang instance);
    partial void UpdateTrangThaiDonHang(TrangThaiDonHang instance);
    partial void DeleteTrangThaiDonHang(TrangThaiDonHang instance);
    #endregion
		
		public DBSkateDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["WebSkateConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DBSkateDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBSkateDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBSkateDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBSkateDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BinhLuan> BinhLuans
		{
			get
			{
				return this.GetTable<BinhLuan>();
			}
		}
		
		public System.Data.Linq.Table<ChucVu_NV> ChucVu_NVs
		{
			get
			{
				return this.GetTable<ChucVu_NV>();
			}
		}
		
		public System.Data.Linq.Table<CT_DonHang> CT_DonHangs
		{
			get
			{
				return this.GetTable<CT_DonHang>();
			}
		}
		
		public System.Data.Linq.Table<DonHang> DonHangs
		{
			get
			{
				return this.GetTable<DonHang>();
			}
		}
		
		public System.Data.Linq.Table<KhachHang> KhachHangs
		{
			get
			{
				return this.GetTable<KhachHang>();
			}
		}
		
		public System.Data.Linq.Table<KhuyenMai> KhuyenMais
		{
			get
			{
				return this.GetTable<KhuyenMai>();
			}
		}
		
		public System.Data.Linq.Table<LoaiSanPham> LoaiSanPhams
		{
			get
			{
				return this.GetTable<LoaiSanPham>();
			}
		}
		
		public System.Data.Linq.Table<NhanVien> NhanViens
		{
			get
			{
				return this.GetTable<NhanVien>();
			}
		}
		
		public System.Data.Linq.Table<PhuongThucThanhToan> PhuongThucThanhToans
		{
			get
			{
				return this.GetTable<PhuongThucThanhToan>();
			}
		}
		
		public System.Data.Linq.Table<Quyen_NV> Quyen_NVs
		{
			get
			{
				return this.GetTable<Quyen_NV>();
			}
		}
		
		public System.Data.Linq.Table<SanPham> SanPhams
		{
			get
			{
				return this.GetTable<SanPham>();
			}
		}
		
		public System.Data.Linq.Table<ThuongHieu> ThuongHieus
		{
			get
			{
				return this.GetTable<ThuongHieu>();
			}
		}
		
		public System.Data.Linq.Table<TrangThaiDonHang> TrangThaiDonHangs
		{
			get
			{
				return this.GetTable<TrangThaiDonHang>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BinhLuan")]
	public partial class BinhLuan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idBinhLuan;
		
		private string _NoiDung;
		
		private int _ID_KH;
		
		private string _Ten_KH;
		
		private EntityRef<KhachHang> _KhachHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidBinhLuanChanging(int value);
    partial void OnidBinhLuanChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnID_KHChanging(int value);
    partial void OnID_KHChanged();
    partial void OnTen_KHChanging(string value);
    partial void OnTen_KHChanged();
    #endregion
		
		public BinhLuan()
		{
			this._KhachHang = default(EntityRef<KhachHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idBinhLuan", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idBinhLuan
		{
			get
			{
				return this._idBinhLuan;
			}
			set
			{
				if ((this._idBinhLuan != value))
				{
					this.OnidBinhLuanChanging(value);
					this.SendPropertyChanging();
					this._idBinhLuan = value;
					this.SendPropertyChanged("idBinhLuan");
					this.OnidBinhLuanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_KH", DbType="Int NOT NULL")]
		public int ID_KH
		{
			get
			{
				return this._ID_KH;
			}
			set
			{
				if ((this._ID_KH != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_KHChanging(value);
					this.SendPropertyChanging();
					this._ID_KH = value;
					this.SendPropertyChanged("ID_KH");
					this.OnID_KHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten_KH", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ten_KH
		{
			get
			{
				return this._Ten_KH;
			}
			set
			{
				if ((this._Ten_KH != value))
				{
					this.OnTen_KHChanging(value);
					this.SendPropertyChanging();
					this._Ten_KH = value;
					this.SendPropertyChanged("Ten_KH");
					this.OnTen_KHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_BinhLuan", Storage="_KhachHang", ThisKey="ID_KH", OtherKey="ID_KH", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.BinhLuans.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.BinhLuans.Add(this);
						this._ID_KH = value.ID_KH;
					}
					else
					{
						this._ID_KH = default(int);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChucVu_NV")]
	public partial class ChucVu_NV : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_ChucVu;
		
		private string _ChucVu;
		
		private EntitySet<NhanVien> _NhanViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ChucVuChanging(int value);
    partial void OnID_ChucVuChanged();
    partial void OnChucVuChanging(string value);
    partial void OnChucVuChanged();
    #endregion
		
		public ChucVu_NV()
		{
			this._NhanViens = new EntitySet<NhanVien>(new Action<NhanVien>(this.attach_NhanViens), new Action<NhanVien>(this.detach_NhanViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ChucVu", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_ChucVu
		{
			get
			{
				return this._ID_ChucVu;
			}
			set
			{
				if ((this._ID_ChucVu != value))
				{
					this.OnID_ChucVuChanging(value);
					this.SendPropertyChanging();
					this._ID_ChucVu = value;
					this.SendPropertyChanged("ID_ChucVu");
					this.OnID_ChucVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChucVu", DbType="NVarChar(50)")]
		public string ChucVu
		{
			get
			{
				return this._ChucVu;
			}
			set
			{
				if ((this._ChucVu != value))
				{
					this.OnChucVuChanging(value);
					this.SendPropertyChanging();
					this._ChucVu = value;
					this.SendPropertyChanged("ChucVu");
					this.OnChucVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChucVu_NV_NhanVien", Storage="_NhanViens", ThisKey="ID_ChucVu", OtherKey="ID_ChucVu")]
		public EntitySet<NhanVien> NhanViens
		{
			get
			{
				return this._NhanViens;
			}
			set
			{
				this._NhanViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.ChucVu_NV = this;
		}
		
		private void detach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.ChucVu_NV = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_DonHang")]
	public partial class CT_DonHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_CTDH;
		
		private int _ID_DonHang;
		
		private int _ID_SanPham;
		
		private int _SoLuong;
		
		private long _DonGia;
		
		private EntityRef<DonHang> _DonHang;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_CTDHChanging(int value);
    partial void OnID_CTDHChanged();
    partial void OnID_DonHangChanging(int value);
    partial void OnID_DonHangChanged();
    partial void OnID_SanPhamChanging(int value);
    partial void OnID_SanPhamChanged();
    partial void OnSoLuongChanging(int value);
    partial void OnSoLuongChanged();
    partial void OnDonGiaChanging(long value);
    partial void OnDonGiaChanged();
    #endregion
		
		public CT_DonHang()
		{
			this._DonHang = default(EntityRef<DonHang>);
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_CTDH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_CTDH
		{
			get
			{
				return this._ID_CTDH;
			}
			set
			{
				if ((this._ID_CTDH != value))
				{
					this.OnID_CTDHChanging(value);
					this.SendPropertyChanging();
					this._ID_CTDH = value;
					this.SendPropertyChanged("ID_CTDH");
					this.OnID_CTDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DonHang", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_DonHang
		{
			get
			{
				return this._ID_DonHang;
			}
			set
			{
				if ((this._ID_DonHang != value))
				{
					if (this._DonHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_DonHangChanging(value);
					this.SendPropertyChanging();
					this._ID_DonHang = value;
					this.SendPropertyChanged("ID_DonHang");
					this.OnID_DonHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SanPham", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_SanPham
		{
			get
			{
				return this._ID_SanPham;
			}
			set
			{
				if ((this._ID_SanPham != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_SanPhamChanging(value);
					this.SendPropertyChanging();
					this._ID_SanPham = value;
					this.SendPropertyChanged("ID_SanPham");
					this.OnID_SanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int NOT NULL")]
		public int SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="BigInt NOT NULL")]
		public long DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_CT_DonHang", Storage="_DonHang", ThisKey="ID_DonHang", OtherKey="ID_DonHang", IsForeignKey=true)]
		public DonHang DonHang
		{
			get
			{
				return this._DonHang.Entity;
			}
			set
			{
				DonHang previousValue = this._DonHang.Entity;
				if (((previousValue != value) 
							|| (this._DonHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DonHang.Entity = null;
						previousValue.CT_DonHangs.Remove(this);
					}
					this._DonHang.Entity = value;
					if ((value != null))
					{
						value.CT_DonHangs.Add(this);
						this._ID_DonHang = value.ID_DonHang;
					}
					else
					{
						this._ID_DonHang = default(int);
					}
					this.SendPropertyChanged("DonHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_CT_DonHang", Storage="_SanPham", ThisKey="ID_SanPham", OtherKey="ID_SanPham", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.CT_DonHangs.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.CT_DonHangs.Add(this);
						this._ID_SanPham = value.ID_SanPham;
					}
					else
					{
						this._ID_SanPham = default(int);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DonHang")]
	public partial class DonHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_DonHang;
		
		private int _ID_KH;
		
		private System.Nullable<int> _PT_ThanhToan;
		
		private string _GhiChu;
		
		private System.Nullable<int> _TranThai;
		
		private string _TenNguoiNhan;
		
		private string _DiaChiNguoiNhan;
		
		private string _SDT_NguoiNhan;
		
		private System.Nullable<System.DateTime> _NgayDat;
		
		private System.Nullable<System.DateTime> _NgayGiao;
		
		private EntitySet<CT_DonHang> _CT_DonHangs;
		
		private EntityRef<KhachHang> _KhachHang;
		
		private EntityRef<PhuongThucThanhToan> _PhuongThucThanhToan;
		
		private EntityRef<TrangThaiDonHang> _TrangThaiDonHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_DonHangChanging(int value);
    partial void OnID_DonHangChanged();
    partial void OnID_KHChanging(int value);
    partial void OnID_KHChanged();
    partial void OnPT_ThanhToanChanging(System.Nullable<int> value);
    partial void OnPT_ThanhToanChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    partial void OnTranThaiChanging(System.Nullable<int> value);
    partial void OnTranThaiChanged();
    partial void OnTenNguoiNhanChanging(string value);
    partial void OnTenNguoiNhanChanged();
    partial void OnDiaChiNguoiNhanChanging(string value);
    partial void OnDiaChiNguoiNhanChanged();
    partial void OnSDT_NguoiNhanChanging(string value);
    partial void OnSDT_NguoiNhanChanged();
    partial void OnNgayDatChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayDatChanged();
    partial void OnNgayGiaoChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayGiaoChanged();
    #endregion
		
		public DonHang()
		{
			this._CT_DonHangs = new EntitySet<CT_DonHang>(new Action<CT_DonHang>(this.attach_CT_DonHangs), new Action<CT_DonHang>(this.detach_CT_DonHangs));
			this._KhachHang = default(EntityRef<KhachHang>);
			this._PhuongThucThanhToan = default(EntityRef<PhuongThucThanhToan>);
			this._TrangThaiDonHang = default(EntityRef<TrangThaiDonHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DonHang", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_DonHang
		{
			get
			{
				return this._ID_DonHang;
			}
			set
			{
				if ((this._ID_DonHang != value))
				{
					this.OnID_DonHangChanging(value);
					this.SendPropertyChanging();
					this._ID_DonHang = value;
					this.SendPropertyChanged("ID_DonHang");
					this.OnID_DonHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_KH", DbType="Int NOT NULL")]
		public int ID_KH
		{
			get
			{
				return this._ID_KH;
			}
			set
			{
				if ((this._ID_KH != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_KHChanging(value);
					this.SendPropertyChanging();
					this._ID_KH = value;
					this.SendPropertyChanged("ID_KH");
					this.OnID_KHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PT_ThanhToan", DbType="Int")]
		public System.Nullable<int> PT_ThanhToan
		{
			get
			{
				return this._PT_ThanhToan;
			}
			set
			{
				if ((this._PT_ThanhToan != value))
				{
					if (this._PhuongThucThanhToan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPT_ThanhToanChanging(value);
					this.SendPropertyChanging();
					this._PT_ThanhToan = value;
					this.SendPropertyChanged("PT_ThanhToan");
					this.OnPT_ThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TranThai", DbType="Int")]
		public System.Nullable<int> TranThai
		{
			get
			{
				return this._TranThai;
			}
			set
			{
				if ((this._TranThai != value))
				{
					if (this._TrangThaiDonHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTranThaiChanging(value);
					this.SendPropertyChanging();
					this._TranThai = value;
					this.SendPropertyChanged("TranThai");
					this.OnTranThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNguoiNhan", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenNguoiNhan
		{
			get
			{
				return this._TenNguoiNhan;
			}
			set
			{
				if ((this._TenNguoiNhan != value))
				{
					this.OnTenNguoiNhanChanging(value);
					this.SendPropertyChanging();
					this._TenNguoiNhan = value;
					this.SendPropertyChanged("TenNguoiNhan");
					this.OnTenNguoiNhanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChiNguoiNhan", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DiaChiNguoiNhan
		{
			get
			{
				return this._DiaChiNguoiNhan;
			}
			set
			{
				if ((this._DiaChiNguoiNhan != value))
				{
					this.OnDiaChiNguoiNhanChanging(value);
					this.SendPropertyChanging();
					this._DiaChiNguoiNhan = value;
					this.SendPropertyChanged("DiaChiNguoiNhan");
					this.OnDiaChiNguoiNhanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT_NguoiNhan", DbType="NVarChar(11) NOT NULL", CanBeNull=false)]
		public string SDT_NguoiNhan
		{
			get
			{
				return this._SDT_NguoiNhan;
			}
			set
			{
				if ((this._SDT_NguoiNhan != value))
				{
					this.OnSDT_NguoiNhanChanging(value);
					this.SendPropertyChanging();
					this._SDT_NguoiNhan = value;
					this.SendPropertyChanged("SDT_NguoiNhan");
					this.OnSDT_NguoiNhanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDat", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayDat
		{
			get
			{
				return this._NgayDat;
			}
			set
			{
				if ((this._NgayDat != value))
				{
					this.OnNgayDatChanging(value);
					this.SendPropertyChanging();
					this._NgayDat = value;
					this.SendPropertyChanged("NgayDat");
					this.OnNgayDatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayGiao", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayGiao
		{
			get
			{
				return this._NgayGiao;
			}
			set
			{
				if ((this._NgayGiao != value))
				{
					this.OnNgayGiaoChanging(value);
					this.SendPropertyChanging();
					this._NgayGiao = value;
					this.SendPropertyChanged("NgayGiao");
					this.OnNgayGiaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_CT_DonHang", Storage="_CT_DonHangs", ThisKey="ID_DonHang", OtherKey="ID_DonHang")]
		public EntitySet<CT_DonHang> CT_DonHangs
		{
			get
			{
				return this._CT_DonHangs;
			}
			set
			{
				this._CT_DonHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_DonHang", Storage="_KhachHang", ThisKey="ID_KH", OtherKey="ID_KH", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.DonHangs.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.DonHangs.Add(this);
						this._ID_KH = value.ID_KH;
					}
					else
					{
						this._ID_KH = default(int);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhuongThucThanhToan_DonHang", Storage="_PhuongThucThanhToan", ThisKey="PT_ThanhToan", OtherKey="PT_ThanhToan", IsForeignKey=true)]
		public PhuongThucThanhToan PhuongThucThanhToan
		{
			get
			{
				return this._PhuongThucThanhToan.Entity;
			}
			set
			{
				PhuongThucThanhToan previousValue = this._PhuongThucThanhToan.Entity;
				if (((previousValue != value) 
							|| (this._PhuongThucThanhToan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhuongThucThanhToan.Entity = null;
						previousValue.DonHangs.Remove(this);
					}
					this._PhuongThucThanhToan.Entity = value;
					if ((value != null))
					{
						value.DonHangs.Add(this);
						this._PT_ThanhToan = value.PT_ThanhToan;
					}
					else
					{
						this._PT_ThanhToan = default(Nullable<int>);
					}
					this.SendPropertyChanged("PhuongThucThanhToan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrangThaiDonHang_DonHang", Storage="_TrangThaiDonHang", ThisKey="TranThai", OtherKey="TrangThai", IsForeignKey=true)]
		public TrangThaiDonHang TrangThaiDonHang
		{
			get
			{
				return this._TrangThaiDonHang.Entity;
			}
			set
			{
				TrangThaiDonHang previousValue = this._TrangThaiDonHang.Entity;
				if (((previousValue != value) 
							|| (this._TrangThaiDonHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrangThaiDonHang.Entity = null;
						previousValue.DonHangs.Remove(this);
					}
					this._TrangThaiDonHang.Entity = value;
					if ((value != null))
					{
						value.DonHangs.Add(this);
						this._TranThai = value.TrangThai;
					}
					else
					{
						this._TranThai = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrangThaiDonHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_DonHangs(CT_DonHang entity)
		{
			this.SendPropertyChanging();
			entity.DonHang = this;
		}
		
		private void detach_CT_DonHangs(CT_DonHang entity)
		{
			this.SendPropertyChanging();
			entity.DonHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachHang")]
	public partial class KhachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_KH;
		
		private string _HoTen_KH;
		
		private string _SDT_KH;
		
		private string _DiaChi_KH;
		
		private string _Account_KH;
		
		private string _Password_KH;
		
		private EntitySet<BinhLuan> _BinhLuans;
		
		private EntitySet<DonHang> _DonHangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_KHChanging(int value);
    partial void OnID_KHChanged();
    partial void OnHoTen_KHChanging(string value);
    partial void OnHoTen_KHChanged();
    partial void OnSDT_KHChanging(string value);
    partial void OnSDT_KHChanged();
    partial void OnDiaChi_KHChanging(string value);
    partial void OnDiaChi_KHChanged();
    partial void OnAccount_KHChanging(string value);
    partial void OnAccount_KHChanged();
    partial void OnPassword_KHChanging(string value);
    partial void OnPassword_KHChanged();
    #endregion
		
		public KhachHang()
		{
			this._BinhLuans = new EntitySet<BinhLuan>(new Action<BinhLuan>(this.attach_BinhLuans), new Action<BinhLuan>(this.detach_BinhLuans));
			this._DonHangs = new EntitySet<DonHang>(new Action<DonHang>(this.attach_DonHangs), new Action<DonHang>(this.detach_DonHangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_KH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_KH
		{
			get
			{
				return this._ID_KH;
			}
			set
			{
				if ((this._ID_KH != value))
				{
					this.OnID_KHChanging(value);
					this.SendPropertyChanging();
					this._ID_KH = value;
					this.SendPropertyChanged("ID_KH");
					this.OnID_KHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen_KH", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HoTen_KH
		{
			get
			{
				return this._HoTen_KH;
			}
			set
			{
				if ((this._HoTen_KH != value))
				{
					this.OnHoTen_KHChanging(value);
					this.SendPropertyChanging();
					this._HoTen_KH = value;
					this.SendPropertyChanged("HoTen_KH");
					this.OnHoTen_KHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT_KH", DbType="NVarChar(11) NOT NULL", CanBeNull=false)]
		public string SDT_KH
		{
			get
			{
				return this._SDT_KH;
			}
			set
			{
				if ((this._SDT_KH != value))
				{
					this.OnSDT_KHChanging(value);
					this.SendPropertyChanging();
					this._SDT_KH = value;
					this.SendPropertyChanged("SDT_KH");
					this.OnSDT_KHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi_KH", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string DiaChi_KH
		{
			get
			{
				return this._DiaChi_KH;
			}
			set
			{
				if ((this._DiaChi_KH != value))
				{
					this.OnDiaChi_KHChanging(value);
					this.SendPropertyChanging();
					this._DiaChi_KH = value;
					this.SendPropertyChanged("DiaChi_KH");
					this.OnDiaChi_KHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account_KH", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Account_KH
		{
			get
			{
				return this._Account_KH;
			}
			set
			{
				if ((this._Account_KH != value))
				{
					this.OnAccount_KHChanging(value);
					this.SendPropertyChanging();
					this._Account_KH = value;
					this.SendPropertyChanged("Account_KH");
					this.OnAccount_KHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password_KH", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Password_KH
		{
			get
			{
				return this._Password_KH;
			}
			set
			{
				if ((this._Password_KH != value))
				{
					this.OnPassword_KHChanging(value);
					this.SendPropertyChanging();
					this._Password_KH = value;
					this.SendPropertyChanged("Password_KH");
					this.OnPassword_KHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_BinhLuan", Storage="_BinhLuans", ThisKey="ID_KH", OtherKey="ID_KH")]
		public EntitySet<BinhLuan> BinhLuans
		{
			get
			{
				return this._BinhLuans;
			}
			set
			{
				this._BinhLuans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_DonHang", Storage="_DonHangs", ThisKey="ID_KH", OtherKey="ID_KH")]
		public EntitySet<DonHang> DonHangs
		{
			get
			{
				return this._DonHangs;
			}
			set
			{
				this._DonHangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BinhLuans(BinhLuan entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_BinhLuans(BinhLuan entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
		
		private void attach_DonHangs(DonHang entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_DonHangs(DonHang entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhuyenMai")]
	public partial class KhuyenMai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_KhuyenMai;
		
		private decimal _GiaKhuyenMai;
		
		private System.Nullable<int> _ID_SanPham;
		
		private System.Nullable<int> _ID_NV;
		
		private EntityRef<NhanVien> _NhanVien;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_KhuyenMaiChanging(int value);
    partial void OnID_KhuyenMaiChanged();
    partial void OnGiaKhuyenMaiChanging(decimal value);
    partial void OnGiaKhuyenMaiChanged();
    partial void OnID_SanPhamChanging(System.Nullable<int> value);
    partial void OnID_SanPhamChanged();
    partial void OnID_NVChanging(System.Nullable<int> value);
    partial void OnID_NVChanged();
    #endregion
		
		public KhuyenMai()
		{
			this._NhanVien = default(EntityRef<NhanVien>);
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_KhuyenMai", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_KhuyenMai
		{
			get
			{
				return this._ID_KhuyenMai;
			}
			set
			{
				if ((this._ID_KhuyenMai != value))
				{
					this.OnID_KhuyenMaiChanging(value);
					this.SendPropertyChanging();
					this._ID_KhuyenMai = value;
					this.SendPropertyChanged("ID_KhuyenMai");
					this.OnID_KhuyenMaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaKhuyenMai", DbType="Money NOT NULL")]
		public decimal GiaKhuyenMai
		{
			get
			{
				return this._GiaKhuyenMai;
			}
			set
			{
				if ((this._GiaKhuyenMai != value))
				{
					this.OnGiaKhuyenMaiChanging(value);
					this.SendPropertyChanging();
					this._GiaKhuyenMai = value;
					this.SendPropertyChanged("GiaKhuyenMai");
					this.OnGiaKhuyenMaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SanPham", DbType="Int")]
		public System.Nullable<int> ID_SanPham
		{
			get
			{
				return this._ID_SanPham;
			}
			set
			{
				if ((this._ID_SanPham != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_SanPhamChanging(value);
					this.SendPropertyChanging();
					this._ID_SanPham = value;
					this.SendPropertyChanged("ID_SanPham");
					this.OnID_SanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NV", DbType="Int")]
		public System.Nullable<int> ID_NV
		{
			get
			{
				return this._ID_NV;
			}
			set
			{
				if ((this._ID_NV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_NVChanging(value);
					this.SendPropertyChanging();
					this._ID_NV = value;
					this.SendPropertyChanged("ID_NV");
					this.OnID_NVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_KhuyenMai", Storage="_NhanVien", ThisKey="ID_NV", OtherKey="ID_NV", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.KhuyenMais.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.KhuyenMais.Add(this);
						this._ID_NV = value.ID_NV;
					}
					else
					{
						this._ID_NV = default(Nullable<int>);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_KhuyenMai", Storage="_SanPham", ThisKey="ID_SanPham", OtherKey="ID_SanPham", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.KhuyenMais.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.KhuyenMais.Add(this);
						this._ID_SanPham = value.ID_SanPham;
					}
					else
					{
						this._ID_SanPham = default(Nullable<int>);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiSanPham")]
	public partial class LoaiSanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Loai;
		
		private string _TenLoai;
		
		private EntitySet<SanPham> _SanPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_LoaiChanging(int value);
    partial void OnID_LoaiChanged();
    partial void OnTenLoaiChanging(string value);
    partial void OnTenLoaiChanged();
    #endregion
		
		public LoaiSanPham()
		{
			this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Loai", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Loai
		{
			get
			{
				return this._ID_Loai;
			}
			set
			{
				if ((this._ID_Loai != value))
				{
					this.OnID_LoaiChanging(value);
					this.SendPropertyChanging();
					this._ID_Loai = value;
					this.SendPropertyChanged("ID_Loai");
					this.OnID_LoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoai", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenLoai
		{
			get
			{
				return this._TenLoai;
			}
			set
			{
				if ((this._TenLoai != value))
				{
					this.OnTenLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenLoai = value;
					this.SendPropertyChanged("TenLoai");
					this.OnTenLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiSanPham_SanPham", Storage="_SanPhams", ThisKey="ID_Loai", OtherKey="ID_Loai")]
		public EntitySet<SanPham> SanPhams
		{
			get
			{
				return this._SanPhams;
			}
			set
			{
				this._SanPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.LoaiSanPham = this;
		}
		
		private void detach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.LoaiSanPham = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_NV;
		
		private string _HoTen_NV;
		
		private string _SDT_NV;
		
		private string _Email_NV;
		
		private string _Account_NV;
		
		private string _Password_NV;
		
		private int _ID_quyen;
		
		private int _ID_ChucVu;
		
		private EntitySet<KhuyenMai> _KhuyenMais;
		
		private EntityRef<ChucVu_NV> _ChucVu_NV;
		
		private EntityRef<Quyen_NV> _Quyen_NV;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_NVChanging(int value);
    partial void OnID_NVChanged();
    partial void OnHoTen_NVChanging(string value);
    partial void OnHoTen_NVChanged();
    partial void OnSDT_NVChanging(string value);
    partial void OnSDT_NVChanged();
    partial void OnEmail_NVChanging(string value);
    partial void OnEmail_NVChanged();
    partial void OnAccount_NVChanging(string value);
    partial void OnAccount_NVChanged();
    partial void OnPassword_NVChanging(string value);
    partial void OnPassword_NVChanged();
    partial void OnID_quyenChanging(int value);
    partial void OnID_quyenChanged();
    partial void OnID_ChucVuChanging(int value);
    partial void OnID_ChucVuChanged();
    #endregion
		
		public NhanVien()
		{
			this._KhuyenMais = new EntitySet<KhuyenMai>(new Action<KhuyenMai>(this.attach_KhuyenMais), new Action<KhuyenMai>(this.detach_KhuyenMais));
			this._ChucVu_NV = default(EntityRef<ChucVu_NV>);
			this._Quyen_NV = default(EntityRef<Quyen_NV>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NV", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_NV
		{
			get
			{
				return this._ID_NV;
			}
			set
			{
				if ((this._ID_NV != value))
				{
					this.OnID_NVChanging(value);
					this.SendPropertyChanging();
					this._ID_NV = value;
					this.SendPropertyChanged("ID_NV");
					this.OnID_NVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen_NV", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HoTen_NV
		{
			get
			{
				return this._HoTen_NV;
			}
			set
			{
				if ((this._HoTen_NV != value))
				{
					this.OnHoTen_NVChanging(value);
					this.SendPropertyChanging();
					this._HoTen_NV = value;
					this.SendPropertyChanged("HoTen_NV");
					this.OnHoTen_NVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT_NV", DbType="NVarChar(11)")]
		public string SDT_NV
		{
			get
			{
				return this._SDT_NV;
			}
			set
			{
				if ((this._SDT_NV != value))
				{
					this.OnSDT_NVChanging(value);
					this.SendPropertyChanging();
					this._SDT_NV = value;
					this.SendPropertyChanged("SDT_NV");
					this.OnSDT_NVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email_NV", DbType="NVarChar(50)")]
		public string Email_NV
		{
			get
			{
				return this._Email_NV;
			}
			set
			{
				if ((this._Email_NV != value))
				{
					this.OnEmail_NVChanging(value);
					this.SendPropertyChanging();
					this._Email_NV = value;
					this.SendPropertyChanged("Email_NV");
					this.OnEmail_NVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account_NV", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Account_NV
		{
			get
			{
				return this._Account_NV;
			}
			set
			{
				if ((this._Account_NV != value))
				{
					this.OnAccount_NVChanging(value);
					this.SendPropertyChanging();
					this._Account_NV = value;
					this.SendPropertyChanged("Account_NV");
					this.OnAccount_NVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password_NV", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Password_NV
		{
			get
			{
				return this._Password_NV;
			}
			set
			{
				if ((this._Password_NV != value))
				{
					this.OnPassword_NVChanging(value);
					this.SendPropertyChanging();
					this._Password_NV = value;
					this.SendPropertyChanged("Password_NV");
					this.OnPassword_NVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_quyen", DbType="Int NOT NULL")]
		public int ID_quyen
		{
			get
			{
				return this._ID_quyen;
			}
			set
			{
				if ((this._ID_quyen != value))
				{
					if (this._Quyen_NV.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_quyenChanging(value);
					this.SendPropertyChanging();
					this._ID_quyen = value;
					this.SendPropertyChanged("ID_quyen");
					this.OnID_quyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ChucVu", DbType="Int NOT NULL")]
		public int ID_ChucVu
		{
			get
			{
				return this._ID_ChucVu;
			}
			set
			{
				if ((this._ID_ChucVu != value))
				{
					if (this._ChucVu_NV.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ChucVuChanging(value);
					this.SendPropertyChanging();
					this._ID_ChucVu = value;
					this.SendPropertyChanged("ID_ChucVu");
					this.OnID_ChucVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_KhuyenMai", Storage="_KhuyenMais", ThisKey="ID_NV", OtherKey="ID_NV")]
		public EntitySet<KhuyenMai> KhuyenMais
		{
			get
			{
				return this._KhuyenMais;
			}
			set
			{
				this._KhuyenMais.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChucVu_NV_NhanVien", Storage="_ChucVu_NV", ThisKey="ID_ChucVu", OtherKey="ID_ChucVu", IsForeignKey=true)]
		public ChucVu_NV ChucVu_NV
		{
			get
			{
				return this._ChucVu_NV.Entity;
			}
			set
			{
				ChucVu_NV previousValue = this._ChucVu_NV.Entity;
				if (((previousValue != value) 
							|| (this._ChucVu_NV.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChucVu_NV.Entity = null;
						previousValue.NhanViens.Remove(this);
					}
					this._ChucVu_NV.Entity = value;
					if ((value != null))
					{
						value.NhanViens.Add(this);
						this._ID_ChucVu = value.ID_ChucVu;
					}
					else
					{
						this._ID_ChucVu = default(int);
					}
					this.SendPropertyChanged("ChucVu_NV");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quyen_NV_NhanVien", Storage="_Quyen_NV", ThisKey="ID_quyen", OtherKey="ID_quyen", IsForeignKey=true)]
		public Quyen_NV Quyen_NV
		{
			get
			{
				return this._Quyen_NV.Entity;
			}
			set
			{
				Quyen_NV previousValue = this._Quyen_NV.Entity;
				if (((previousValue != value) 
							|| (this._Quyen_NV.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Quyen_NV.Entity = null;
						previousValue.NhanViens.Remove(this);
					}
					this._Quyen_NV.Entity = value;
					if ((value != null))
					{
						value.NhanViens.Add(this);
						this._ID_quyen = value.ID_quyen;
					}
					else
					{
						this._ID_quyen = default(int);
					}
					this.SendPropertyChanged("Quyen_NV");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KhuyenMais(KhuyenMai entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_KhuyenMais(KhuyenMai entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhuongThucThanhToan")]
	public partial class PhuongThucThanhToan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PT_ThanhToan;
		
		private string _PhuongThuc;
		
		private EntitySet<DonHang> _DonHangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPT_ThanhToanChanging(int value);
    partial void OnPT_ThanhToanChanged();
    partial void OnPhuongThucChanging(string value);
    partial void OnPhuongThucChanged();
    #endregion
		
		public PhuongThucThanhToan()
		{
			this._DonHangs = new EntitySet<DonHang>(new Action<DonHang>(this.attach_DonHangs), new Action<DonHang>(this.detach_DonHangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PT_ThanhToan", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PT_ThanhToan
		{
			get
			{
				return this._PT_ThanhToan;
			}
			set
			{
				if ((this._PT_ThanhToan != value))
				{
					this.OnPT_ThanhToanChanging(value);
					this.SendPropertyChanging();
					this._PT_ThanhToan = value;
					this.SendPropertyChanged("PT_ThanhToan");
					this.OnPT_ThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhuongThuc", DbType="NVarChar(50)")]
		public string PhuongThuc
		{
			get
			{
				return this._PhuongThuc;
			}
			set
			{
				if ((this._PhuongThuc != value))
				{
					this.OnPhuongThucChanging(value);
					this.SendPropertyChanging();
					this._PhuongThuc = value;
					this.SendPropertyChanged("PhuongThuc");
					this.OnPhuongThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhuongThucThanhToan_DonHang", Storage="_DonHangs", ThisKey="PT_ThanhToan", OtherKey="PT_ThanhToan")]
		public EntitySet<DonHang> DonHangs
		{
			get
			{
				return this._DonHangs;
			}
			set
			{
				this._DonHangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DonHangs(DonHang entity)
		{
			this.SendPropertyChanging();
			entity.PhuongThucThanhToan = this;
		}
		
		private void detach_DonHangs(DonHang entity)
		{
			this.SendPropertyChanging();
			entity.PhuongThucThanhToan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Quyen_NV")]
	public partial class Quyen_NV : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_quyen;
		
		private string _Quyen;
		
		private EntitySet<NhanVien> _NhanViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_quyenChanging(int value);
    partial void OnID_quyenChanged();
    partial void OnQuyenChanging(string value);
    partial void OnQuyenChanged();
    #endregion
		
		public Quyen_NV()
		{
			this._NhanViens = new EntitySet<NhanVien>(new Action<NhanVien>(this.attach_NhanViens), new Action<NhanVien>(this.detach_NhanViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_quyen", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_quyen
		{
			get
			{
				return this._ID_quyen;
			}
			set
			{
				if ((this._ID_quyen != value))
				{
					this.OnID_quyenChanging(value);
					this.SendPropertyChanging();
					this._ID_quyen = value;
					this.SendPropertyChanged("ID_quyen");
					this.OnID_quyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quyen", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Quyen
		{
			get
			{
				return this._Quyen;
			}
			set
			{
				if ((this._Quyen != value))
				{
					this.OnQuyenChanging(value);
					this.SendPropertyChanging();
					this._Quyen = value;
					this.SendPropertyChanged("Quyen");
					this.OnQuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quyen_NV_NhanVien", Storage="_NhanViens", ThisKey="ID_quyen", OtherKey="ID_quyen")]
		public EntitySet<NhanVien> NhanViens
		{
			get
			{
				return this._NhanViens;
			}
			set
			{
				this._NhanViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.Quyen_NV = this;
		}
		
		private void detach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.Quyen_NV = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SanPham")]
	public partial class SanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_SanPham;
		
		private string _TenSanPham;
		
		private System.Nullable<long> _Gia_SanPham;
		
		private string _Image;
		
		private string _ChiTietSanPham;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<int> _ID_Loai;
		
		private System.Nullable<int> _ID_ThuongHieu;
		
		private EntitySet<CT_DonHang> _CT_DonHangs;
		
		private EntitySet<KhuyenMai> _KhuyenMais;
		
		private EntityRef<LoaiSanPham> _LoaiSanPham;
		
		private EntityRef<ThuongHieu> _ThuongHieu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_SanPhamChanging(int value);
    partial void OnID_SanPhamChanged();
    partial void OnTenSanPhamChanging(string value);
    partial void OnTenSanPhamChanged();
    partial void OnGia_SanPhamChanging(System.Nullable<long> value);
    partial void OnGia_SanPhamChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnChiTietSanPhamChanging(string value);
    partial void OnChiTietSanPhamChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnID_LoaiChanging(System.Nullable<int> value);
    partial void OnID_LoaiChanged();
    partial void OnID_ThuongHieuChanging(System.Nullable<int> value);
    partial void OnID_ThuongHieuChanged();
    #endregion
		
		public SanPham()
		{
			this._CT_DonHangs = new EntitySet<CT_DonHang>(new Action<CT_DonHang>(this.attach_CT_DonHangs), new Action<CT_DonHang>(this.detach_CT_DonHangs));
			this._KhuyenMais = new EntitySet<KhuyenMai>(new Action<KhuyenMai>(this.attach_KhuyenMais), new Action<KhuyenMai>(this.detach_KhuyenMais));
			this._LoaiSanPham = default(EntityRef<LoaiSanPham>);
			this._ThuongHieu = default(EntityRef<ThuongHieu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SanPham", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_SanPham
		{
			get
			{
				return this._ID_SanPham;
			}
			set
			{
				if ((this._ID_SanPham != value))
				{
					this.OnID_SanPhamChanging(value);
					this.SendPropertyChanging();
					this._ID_SanPham = value;
					this.SendPropertyChanged("ID_SanPham");
					this.OnID_SanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSanPham", DbType="NVarChar(50)")]
		public string TenSanPham
		{
			get
			{
				return this._TenSanPham;
			}
			set
			{
				if ((this._TenSanPham != value))
				{
					this.OnTenSanPhamChanging(value);
					this.SendPropertyChanging();
					this._TenSanPham = value;
					this.SendPropertyChanged("TenSanPham");
					this.OnTenSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia_SanPham", DbType="BigInt")]
		public System.Nullable<long> Gia_SanPham
		{
			get
			{
				return this._Gia_SanPham;
			}
			set
			{
				if ((this._Gia_SanPham != value))
				{
					this.OnGia_SanPhamChanging(value);
					this.SendPropertyChanging();
					this._Gia_SanPham = value;
					this.SendPropertyChanged("Gia_SanPham");
					this.OnGia_SanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="VarChar(250)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChiTietSanPham", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ChiTietSanPham
		{
			get
			{
				return this._ChiTietSanPham;
			}
			set
			{
				if ((this._ChiTietSanPham != value))
				{
					this.OnChiTietSanPhamChanging(value);
					this.SendPropertyChanging();
					this._ChiTietSanPham = value;
					this.SendPropertyChanged("ChiTietSanPham");
					this.OnChiTietSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Loai", DbType="Int")]
		public System.Nullable<int> ID_Loai
		{
			get
			{
				return this._ID_Loai;
			}
			set
			{
				if ((this._ID_Loai != value))
				{
					if (this._LoaiSanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_LoaiChanging(value);
					this.SendPropertyChanging();
					this._ID_Loai = value;
					this.SendPropertyChanged("ID_Loai");
					this.OnID_LoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ThuongHieu", DbType="Int")]
		public System.Nullable<int> ID_ThuongHieu
		{
			get
			{
				return this._ID_ThuongHieu;
			}
			set
			{
				if ((this._ID_ThuongHieu != value))
				{
					if (this._ThuongHieu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ThuongHieuChanging(value);
					this.SendPropertyChanging();
					this._ID_ThuongHieu = value;
					this.SendPropertyChanged("ID_ThuongHieu");
					this.OnID_ThuongHieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_CT_DonHang", Storage="_CT_DonHangs", ThisKey="ID_SanPham", OtherKey="ID_SanPham")]
		public EntitySet<CT_DonHang> CT_DonHangs
		{
			get
			{
				return this._CT_DonHangs;
			}
			set
			{
				this._CT_DonHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_KhuyenMai", Storage="_KhuyenMais", ThisKey="ID_SanPham", OtherKey="ID_SanPham")]
		public EntitySet<KhuyenMai> KhuyenMais
		{
			get
			{
				return this._KhuyenMais;
			}
			set
			{
				this._KhuyenMais.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiSanPham_SanPham", Storage="_LoaiSanPham", ThisKey="ID_Loai", OtherKey="ID_Loai", IsForeignKey=true)]
		public LoaiSanPham LoaiSanPham
		{
			get
			{
				return this._LoaiSanPham.Entity;
			}
			set
			{
				LoaiSanPham previousValue = this._LoaiSanPham.Entity;
				if (((previousValue != value) 
							|| (this._LoaiSanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiSanPham.Entity = null;
						previousValue.SanPhams.Remove(this);
					}
					this._LoaiSanPham.Entity = value;
					if ((value != null))
					{
						value.SanPhams.Add(this);
						this._ID_Loai = value.ID_Loai;
					}
					else
					{
						this._ID_Loai = default(Nullable<int>);
					}
					this.SendPropertyChanged("LoaiSanPham");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThuongHieu_SanPham", Storage="_ThuongHieu", ThisKey="ID_ThuongHieu", OtherKey="ID_ThuongHieu", IsForeignKey=true)]
		public ThuongHieu ThuongHieu
		{
			get
			{
				return this._ThuongHieu.Entity;
			}
			set
			{
				ThuongHieu previousValue = this._ThuongHieu.Entity;
				if (((previousValue != value) 
							|| (this._ThuongHieu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThuongHieu.Entity = null;
						previousValue.SanPhams.Remove(this);
					}
					this._ThuongHieu.Entity = value;
					if ((value != null))
					{
						value.SanPhams.Add(this);
						this._ID_ThuongHieu = value.ID_ThuongHieu;
					}
					else
					{
						this._ID_ThuongHieu = default(Nullable<int>);
					}
					this.SendPropertyChanged("ThuongHieu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_DonHangs(CT_DonHang entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_CT_DonHangs(CT_DonHang entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_KhuyenMais(KhuyenMai entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_KhuyenMais(KhuyenMai entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThuongHieu")]
	public partial class ThuongHieu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_ThuongHieu;
		
		private string _TenThuongHieu;
		
		private EntitySet<SanPham> _SanPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ThuongHieuChanging(int value);
    partial void OnID_ThuongHieuChanged();
    partial void OnTenThuongHieuChanging(string value);
    partial void OnTenThuongHieuChanged();
    #endregion
		
		public ThuongHieu()
		{
			this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ThuongHieu", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_ThuongHieu
		{
			get
			{
				return this._ID_ThuongHieu;
			}
			set
			{
				if ((this._ID_ThuongHieu != value))
				{
					this.OnID_ThuongHieuChanging(value);
					this.SendPropertyChanging();
					this._ID_ThuongHieu = value;
					this.SendPropertyChanged("ID_ThuongHieu");
					this.OnID_ThuongHieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenThuongHieu", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenThuongHieu
		{
			get
			{
				return this._TenThuongHieu;
			}
			set
			{
				if ((this._TenThuongHieu != value))
				{
					this.OnTenThuongHieuChanging(value);
					this.SendPropertyChanging();
					this._TenThuongHieu = value;
					this.SendPropertyChanged("TenThuongHieu");
					this.OnTenThuongHieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThuongHieu_SanPham", Storage="_SanPhams", ThisKey="ID_ThuongHieu", OtherKey="ID_ThuongHieu")]
		public EntitySet<SanPham> SanPhams
		{
			get
			{
				return this._SanPhams;
			}
			set
			{
				this._SanPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.ThuongHieu = this;
		}
		
		private void detach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.ThuongHieu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrangThaiDonHang")]
	public partial class TrangThaiDonHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TrangThai;
		
		private string _TrangThaiDH;
		
		private EntitySet<DonHang> _DonHangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrangThaiChanging(int value);
    partial void OnTrangThaiChanged();
    partial void OnTrangThaiDHChanging(string value);
    partial void OnTrangThaiDHChanged();
    #endregion
		
		public TrangThaiDonHang()
		{
			this._DonHangs = new EntitySet<DonHang>(new Action<DonHang>(this.attach_DonHangs), new Action<DonHang>(this.detach_DonHangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThaiDH", DbType="NVarChar(50)")]
		public string TrangThaiDH
		{
			get
			{
				return this._TrangThaiDH;
			}
			set
			{
				if ((this._TrangThaiDH != value))
				{
					this.OnTrangThaiDHChanging(value);
					this.SendPropertyChanging();
					this._TrangThaiDH = value;
					this.SendPropertyChanged("TrangThaiDH");
					this.OnTrangThaiDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrangThaiDonHang_DonHang", Storage="_DonHangs", ThisKey="TrangThai", OtherKey="TranThai")]
		public EntitySet<DonHang> DonHangs
		{
			get
			{
				return this._DonHangs;
			}
			set
			{
				this._DonHangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DonHangs(DonHang entity)
		{
			this.SendPropertyChanging();
			entity.TrangThaiDonHang = this;
		}
		
		private void detach_DonHangs(DonHang entity)
		{
			this.SendPropertyChanging();
			entity.TrangThaiDonHang = null;
		}
	}
}
#pragma warning restore 1591
